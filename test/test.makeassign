(makeassign) ; "","Line 1: syntax error, unexpected ')' ')'",""
(makeassign "_ma_" "ram:" 1) ; "","Line 1: syntax error, unexpected INT, expecting '(' or ')' '1'",""
(makeassign "_ma_" "ram:" (safe) (quiet)) ; "","Line 1: syntax error, unexpected '(', expecting ')' '('",""
(makeassign "_ma_" (safe) (quiet)) ; "","Line 1: syntax error, unexpected '(', expecting ')' '('",""
(makeassign "_ma_" (safe) err) ; "","Line 1: syntax error, unexpected SYM, expecting ')' 'err'",""
(makeassign "_ma_" (safe) err) ; "","Line 1: syntax error, unexpected SYM, expecting ')' 'err'",""
(if (database "os" "Unknown OS") (makeassign "_ma_" "ram:" (safe)) (+ 1)) ; "","1",""
(if (database "os" "Unknown OS") (makeassign "_ma_" "ram:") (+ 1)) ; "","1",""
(if (database "os" "Unknown OS") (makeassign "_ma_" ) (+ 2)) ; "","2",""
(if (database "os" "Unknown OS") (makeassign "_ma_" (safe)) (+ 2)) ; "","2",""
(set @pretend 1) (if (database "os" "Unknown OS") (makeassign "_ma_" ) (+ 1)) ; "","1",""
(set @pretend 1) (if (database "os" "Unknown OS") (makeassign "_ma_" (safe)) (+ 2)) ; "","2",""
(if (not (database "os" "Unknown OS")) ((set @strict 0) (makeassign "_ma_") (textfile (dest "ram:_mf_") (append "_ma_")) (makeassign "_ma_" "ram:") (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_")) (debug "no")) (makeassign "_ma_")) (debug "yes") ); "","yes 1",""
(if (not (database "os" "Unknown OS")) ((makeassign "_ma_") (textfile (dest "ram:_mf_") (append "_ma_")) (makeassign "_ma_" "ram:") (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_")) (debug "no")) (makeassign "_ma_")) (abort "Line 1: Could not create / remove assign '_ma_' ") ); "","Line 1: Could not create / remove assign '_ma_' 0",""
(if (not (database "os" "Unknown OS")) ((set @pretend 1) (makeassign "_ma_") (textfile (dest "ram:_mf_") (append "_ma_")) (makeassign "_ma_" "ram:") (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_")) (debug "no")) (makeassign "_ma_")) (debug "no") ); "","no 1",""
(if (not (database "os" "Unknown OS")) ((set @pretend 1) (set @strict 0) (makeassign "_ma_") (textfile (dest "ram:_mf_") (append "_ma_")) (makeassign "_ma_" "ram:") (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_")) (debug "no")) (makeassign "_ma_")) (debug "no") ); "","no 1",""
(if (not (database "os" "Unknown OS")) ((set @pretend 1) (makeassign "_ma_" (safe)) (textfile (dest "ram:_mf_") (append "_ma_") (safe)) (makeassign "_ma_" "ram:" (safe)) (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_" (safe))) (debug "no")) (makeassign "_ma_" (safe))) (abort "Line 1: Could not create / remove assign '_ma_' ")); "","Line 1: Could not create / remove assign '_ma_' 0",""
(if (not (database "os" "Unknown OS")) ((set @pretend 1) (set @strict 0) (makeassign "_ma_" (safe)) (textfile (dest "ram:_mf_") (append "_ma_") (safe)) (makeassign "_ma_" "ram:" (safe)) (if (= 1 (exists "_ma_:_mf_")) ((debug "yes") (delete "_ma_:_mf_" (safe))) (debug "no")) (makeassign "_ma_" (safe))) (debug "yes") ); "","yes 1",""

(set @back 1) (trace) (trace) (set f (askfile (prompt "p") (help "h") (default "d") (back (retrace)))) ; "","Line 1: Max recursion depth exceeded 'retrace' phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 phd001 0",""
(set @back 1 i 0) (trace) (debug "x") (if (> i 3) (exit (quiet)) (set i (+ i 1))) (trace) (set f (askfile (prompt "p") (help "h") (default "d") (back (retrace)))) ; "","x phd001 x phd001 x phd001 x phd001 x",""
(trace) (trace) (set f (askfile (prompt "p") (help "h") (default "d") (back (retrace)))) ; "","phd001 d",""
(set i 0) (trace) (debug "x") (if (> i 3) (exit (quiet)) (set i (+ i 1))) (trace) (set f (askfile (prompt "p") (help "h") (default "d") (back (retrace)))) ; "","x phd001 d",""
(set i 0) (trace) (+ 2) (trace) (+ 3) (debug (retrace)) ; "","Line 1: Max recursion depth exceeded 'retrace' 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0",""
(set i 0) (trace) (+ 2) (trace) (+ 3) (+ (retrace)) ; "","Line 1: Max recursion depth exceeded 'retrace' 0",""
(set i 0) (trace) (+ 2) (trace) (+ 3) (trace) (if i (exit "exit" (quiet)) (set i (+ i 1))) (trace) (retrace) ; "","exit1",""
(set i 1) (trace) (debug i) (set i (+ i 1)) (retrace) (debug "X") ; "","1 1",""
(set i 0) (trace) (debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X") ; "","0 1 2 3 4 5 6 7 8 9 1",""
(set i 0 @back 1) (trace) (message ("a%ld" i)) (trace) (set i (+ i 1)) (message ("b%ld" i) (back (retrace))) ; "","Line 1: Max recursion depth exceeded 'retrace' a00b11a10b21a20b31a30b41a40b51a50b61a60b71a70b81a80b91a90b101a100b111a110b121a120b131a130b141a140b151a150b161a160b171a170b181a180b191a190b201a200b211a210b221a220b231a230b241a240b251a250b261a260b271a270b281a280b291a290b301a300b311a310b321a320b3310",""
(set i 0 @back 1) (trace) (message ("a%ld" i)) (trace) (if (> i 7) (exit (quiet)) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) ; "","a00b11a10b21a20b31a30b41a40b51a50b61a60b71a70b81a801",""
(set i 0 @back 1) (trace) (message ("a%ld" i) (back (debug "x"))) (trace) (if (> i 7) (exit (quiet)) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) ; "","a01x b11a11x b21a21x b31a31x b41a41x b51a51x b61a61x b71a71x b81a81x 1",""
(set i 0 @back 1) (trace) (message ("a%ld" i) (back (debug "x"))) (trace) (if (> i 7) (exit (quiet)) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) (debug "!") ; "","a01x b11a11x b21a21x b31a31x b41a41x b51a51x b61a61x b71a71x b81a81x 1",""
(set i 0 @back 1) (trace) (message ("a%ld" i) (back (debug "x"))) (trace) (if (> i 7) ((message "?") (exit (quiet))) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) (debug "!") ; "","a01x b11a11x b21a21x b31a31x b41a41x b51a51x b61a61x b71a71x b81a81x ?01",""
(set i 0 @back 1) (trace) (message ("a%ld" (trace)) (back (debug "x"))) (trace) (if (> i 7) ((message "?") (exit (quiet))) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) (debug "!") ; "","a11x b11a11x b21a11x b31a11x b41a11x b51a11x b61a11x b71a11x b81a11x ?01",""
(set i 0 @back 1) (trace) (message ("a%ld" (trace)) (back (debug "x"))) (+ (trace)) (if (> i 7) ((message "?") (exit (quiet))) (set i (+ i 1))) (message ("b%ld" i) (back (retrace))) (debug "!") ; "","a11x b111",""
(set i 0) (if (= i 0) ((trace) (debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X"))) ; "","0 1 2 3 4 5 6 7 8 9 1",""
(set i 0) (trace) (if (= i 0) ((debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X"))) ; "","0 X 1",""
(procedure func (set i 0) (if (= i 0) ((trace) (debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X")))) (func); "","0 1 2 3 4 5 6 7 8 9 1",""
(procedure func (set i 0) (trace) (if (= i 0) ((debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X")))) (func) ; "","0 X 1",""
(trace) (procedure func (set i 0) (trace) (if (= i 0) ((debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X")))) (func) ; "","0 X 1",""
(trace) (procedure func (set i 0) (if (= i 0) ((debug i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X")))) (func) ; "","0 1",""
(procedure f x (debug x)) (set i 0) (if (= i 0) ((trace) (f i) (trace) (set i (+ i 1)) (if (> i 9) (exit (quiet))) (retrace) (debug "X"))) ; "","0 1 2 3 4 5 6 7 8 9 1",""
(retrace) (trace) (trace) ; "","1",""
(+ (trace) (trace)) ; "","2",""
(+ (trace) (retrace)) ; "","2",""
(trace) (retrace) ; "","1",""
(trace) (trace) (retrace) ; "","Line 1: Max recursion depth exceeded 'retrace' 0",""
(retrace) ; "","1",""
(retrace err) ; "","Line 1: syntax error, unexpected SYM, expecting ')' 'err'",""
(set i 0) (message "1") (trace) (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace) ; "","1020302030exit1",""
(set i 0) (trace) (message "1") (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace) ; "","102030102030exit1",""
(message "1") (message "2") (trace) (message "3") (retrace) ; "","1020301",""
(set i 0) (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (fnc) ; "","102030102030exit1",""
(set i 0) (message "a") (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 2) ((message "b") (exit "exit" (quiet)))) (retrace))) (fnc) ; "","a0102030102030b0exit1",""
(set i 0) (message "a") (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (debug (+ 4)) (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (fnc) (message "b"); "","a01020304 1020304 exit1",""
(set i 0) (message "a") (trace) (message "a") (message "a") (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (fnc) (message "b"); "","a0a0a0102030102030exit1",""
(set i 0) (message "a") (trace) (message "a") (message "a") (if 1 ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (message "b"); "","a0a0a0102030102030exit1",""
(message "a") (trace) (message "a") (message "a") (if 0 ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (retrace))) (message "b"); "","a0a0a0b01",""
(set i 0) (retrace) (message "a") (trace) (retrace) (message "a") (message "a") (if 0 ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (retrace))) (message "b"); "","1",""
(set i 0) (retrace) (message "a") (trace) (retrace) (message "a") (message "a") (if 1 ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (trace) (trace) (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (message "b"); "","1",""
(set i 0) (retrace) (message "a") (trace) (retrace) (message "a") (message "a") (if 1 ((trace) (message "1") (message "2") (trace) (message "3") (+ 4) (trace) (trace) (message "x") (set i (+ 1 i)) (if (= i 2) (exit "exit" (quiet))) (retrace))) (message "b"); "","1",""
(set i 0) (retrace) (trace); "","1",""
(set i 0) (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 3) (exit "exit" (quiet))) (retrace))) (fnc) ; "","102030102030102030exit1",""
(set i 0) (message "a") (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (set i (+ 1 i)) (if (= i 3) ((message "b") (exit "exit" (quiet)))) (retrace))) (fnc) ; "","a0102030102030102030b0exit1",""
(set i 0) (message "a") (procedure fnc ((trace) (message "1") (message "2") (trace) (message "3") (debug (+ 4)) (set i (+ 1 i)) (if (= i 3) (exit "exit" (quiet))) (retrace))) (fnc) (message "b"); "","a01020304 1020304 1020304 exit1",""
